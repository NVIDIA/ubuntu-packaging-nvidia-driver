NVIDIA video drivers for Ubuntu
============================

Further information can be found at http://www.nvidia.com/ -- look for
the "Download Drivers" tab and follow links to the Linux drivers.

This package is generated from the official NVIDIA driver
installer that is available from the above homepage.

DKMS
-------------------------
   Ubuntu includes support to build modules using a utility developed by
   Dell, called DKMS.  It will automatically build your kernel module
   for you when you first boot into the kernel (or as necessary).

   Note: the OBSOLETE_BY line in dkms.conf specifies a kernel version
         which obsoletes the necessity for this particular DKMS module.
         For example, OBSOLETE_BY=2.6.39 will prevent DKMS from building
         modules for kernels >= 2.6.39.

   See the DKMS man page for more information.

Kernel patches
-------------------------
   If you need to provide a kernel patch (say for a kernel not formally
   supported yet by NVIDIA), you can add this patch in the
   debian/dkms/patches directory and mention the patch in the
   debian/templates/dkms.conf.in file.

   It is usually a good idea to restrict the use of a patch to certain
   kernel versions with the PATCH_MATCH[n] variable.

   See the DKMS man page for more information.

32 bit libraries on 64 bit systems
-------------------------
   32 bit libraries are provided on 64 bit systems for compatibility
   reasons.

   The following templates are merged together into the same file on
   amd64:
   debian/templates/nvidia-current.links32.in
   debian/templates/nvidia-current.links.in

   $ld_so_conf_path lets the system know where it should look for 32
   bit libraries.

Update procedure
-------------------------
When a new NVIDIA is available, do the following to update
#DRIVERNAME#:

0.  On your build system, make sure you have the prerequisites
    installed:

    $ sudo apt-get build-dep #DRIVERNAME#

1.  Download the NVIDIA installers i.e. the .run files.

2.  dch -i to update the version in the debian/changelog so that it
    matches the new upstream version.

    Also make sure that the changelog includes both the changes you
    made (if any) to the files in debian/ changes and the changes from
    upstream (i.e. NVIDIA) which you can find in the release notes of
    the driver.

3.  debclean to regenerate most of the files in debian/ from their
    templates in debian/templates/.

4.  Temporarily move the debian/ directory out of the source directory
    and compress it as $SOURCE_NAME _ $NEW_VERSION . orig . tar . gz
    e.g. #DRIVERSRCNAME#_#VERSION#.orig.tar.gz

5.  Move the debian/ directory back to the source directory and type
    debuild -S -sa to produce a new .dsc

6.  Verify the new .dsc produces valid .debs by running it through
    pbuilder, sbuild, etc. as usual.

7.  Install and test the .debs, and then dput the .changes file

X server ABI updates
-------------------------
In order to update the list of the supported X server ABIs you can
edit the debian/substvars file.

Adding new card ids
-------------------------
The NVIDIA driver may work with card ids that are not listed in their
README file. If this is the case, there won't be a modalias for these
cards in the driver package (this only affects driver detection in
Jockey). If you want to make sure that such modaliases are included
in the package, you'll have to add the card ids in uppercase(e.g. 0AFD),
either separated by a white space or one per line, in the
debian/additional_card_ids file.


IMPORTANT NOTE: If any changes to files in debian/ are needed, make sure
to discuss your changes with the maintainer (Alberto aka tseliot) before
you upload.


 -- Alberto Milone <alberto.milone@canonical.com>  Mon, 04 Mar 2013 16:47:22 +0100
